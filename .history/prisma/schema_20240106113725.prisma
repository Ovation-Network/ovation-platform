// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? // @db.Text
  access_token      String? // @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? // @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Supplier {
  id                    String                  @id @default(cuid())
  name                  String
  type                  SupplierType
  country               String?
  region                String?
  city                  String?
  state                 String?
  enhancedCommission    EnhancedCommission[]
  contact               OnSiteContact[]
  generalManager        GeneralManager[]
  representativeCompany RepresentativeCompany[]
}

enum SupplierType {
  HOTEL
  DMC
  CRUISE
  RAIL
  REPRESENTATION_COMPANY
  AIR
  TOUR_OPERATOR
  CAR_RENTAL
  TRAVEL_INSURANCE
  CHAUFFEUR_SERVICES
  TRAINS
  CHAUFFERED
  OTHER
}

model OnSiteContact {
  id         String   @id @default(cuid())
  name       String
  title      String?
  email      String
  phone      String?
  supplierId String
  supplier   Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)
}

model GeneralManager {
  id         String   @id @default(cuid())
  name       String
  title      String?
  email      String
  phone      String?
  supplierId String
  supplier   Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)
}

model RepresentativeCompany {
  id          String   @id @default(cuid())
  name        String
  title       String?
  email       String
  phone       String?
  companyName String?
  supplierId  String
  supplier    Supplier @relation(fields: [supplierId], references: [id], onDelete: Cascade)
}

model EnhancedCommission {
  id                  String    @id @default(cuid())
  name                String
  commission          String?
  specialAmenities    String?
  bookingInstructions String?
  startDate           DateTime?
  endDate             DateTime?
  supplierId          String
  supplier            Supplier  @relation(fields: [supplierId], references: [id], onDelete: Cascade)
}
